// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View>
  <Text>
    Create new Collection
  </Text>
  <View
    style={Object {}}
  >
    <View
      style={
        Object {
          "marginBottom": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontSize": 17,
            "fontWeight": "500",
            "marginBottom": 7,
          }
        }
      >
        Name
      </Text>
      <View
        style={Object {}}
      >
        <TextInput
          accessibilityLabel="Name"
          allowFontScaling={true}
          onChangeText={[Function]}
          style={
            Object {
              "borderColor": "#cccccc",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 17,
              "height": 36,
              "marginBottom": 5,
              "paddingHorizontal": 7,
              "paddingVertical": 7,
            }
          }
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
    <View
      style={
        Object {
          "marginBottom": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontSize": 17,
            "fontWeight": "500",
            "marginBottom": 7,
          }
        }
      >
        Type
      </Text>
      <View
        style={
          Array [
            Object {
              "borderColor": "#cccccc",
              "borderRadius": 4,
              "borderWidth": 1,
              "marginBottom": 4,
            },
            Object {},
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 44,
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 17,
                "paddingLeft": 7,
              }
            }
          >
            -
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 0,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={Object {}}
          >
            <RCTPicker
              items={
                Array [
                  Object {
                    "label": "-",
                    "textColor": undefined,
                    "value": "",
                  },
                  Object {
                    "label": "Books",
                    "textColor": undefined,
                    "value": "BOOK",
                  },
                  Object {
                    "label": "Coins",
                    "textColor": undefined,
                    "value": "COIN",
                  },
                  Object {
                    "label": "Other",
                    "textColor": undefined,
                    "value": "OTHER",
                  },
                ]
              }
              onChange={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              selectedIndex={0}
              style={
                Array [
                  Object {
                    "height": 216,
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Create
      </Text>
    </View>
  </View>
</View>
`;
